// <auto-generated />
using BackendData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackendData.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("BackendData.DomainModels.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PluralsightUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("TwitterAlias")
                        .HasColumnType("TEXT");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            Name = "Martin Fowler",
                            PluralsightUrl = "https://app.pluralsight.com/profile/martin-fowler",
                            TwitterAlias = "https://twitter.com/martinfawler"
                        },
                        new
                        {
                            AuthorId = 2,
                            Name = "Eric Evans",
                            PluralsightUrl = "https://app.pluralsight.com/profile/eric-evans",
                            TwitterAlias = "https://twitter.com/ericevans"
                        },
                        new
                        {
                            AuthorId = 3,
                            Name = "Steve Smith",
                            PluralsightUrl = "https://app.pluralsight.com/profile/steve-smith",
                            TwitterAlias = "https://twitter.com/stevesmith"
                        });
                });

            modelBuilder.Entity("BackendData.DomainModels.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Publisher")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthorId = 1,
                            Publisher = "Addison-Wesley",
                            Title = "Refactoring"
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 1,
                            Publisher = "Addison-Wesley",
                            Title = "Domain-Driven Design"
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 2,
                            Publisher = "Prentice Hall",
                            Title = "Clean Architecture"
                        },
                        new
                        {
                            BookId = 4,
                            AuthorId = 2,
                            Publisher = "Addison-Wesley",
                            Title = "Implementing Domain-Driven Design"
                        });
                });

            modelBuilder.Entity("BackendData.DomainModels.Book", b =>
                {
                    b.HasOne("BackendData.DomainModels.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("BackendData.DomainModels.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
